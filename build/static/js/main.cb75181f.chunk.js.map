{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","className","type","aria-label","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","height","width","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGe,SAASA,EAAT,GAAyC,IAAlBC,EAAiB,EAAjBA,cAAiB,EACjBC,mBAAS,IADQ,mBAC9CC,EAD8C,KAClCC,EADkC,KAerD,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAA+BO,OAC7CN,EAAc,MAKcO,UAAU,oBAAxC,SACE,uBACEC,KAAK,OACLC,aAAW,aACXC,YAAY,sBACZH,UAAU,oGAEVI,MAAOZ,EACPa,SArBoB,SAACV,GACzBF,EAAcE,EAAEW,OAAOF,Y,mCCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVnB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,0BAASV,UAAU,kGAAnB,UACE,kCACE,qBACEwB,IAAKd,EACLe,IAAKL,EACLA,MAAOA,EACPM,OAAO,MACPC,MAAM,MACN3B,UAAU,iCAGd,mBAAGA,UAAU,qDAAb,SACE,sBAAMA,UAAU,WAAhB,SAA4BoB,UCWrBQ,EArBC,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECHN,SAACA,GAAc,IAAD,EACdjB,mBAAS,CACjCwB,KAAM,GACNc,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAgBxC,OAVAC,qBAAU,WACRzB,EAAQC,GAAUyB,MAAK,SAACC,GACpBH,EAAS,CACPhB,KAAMmB,EACNL,SAAS,SAGd,CAACrB,IAGGsB,EDXyBK,CAAa3B,GAAhCa,EAFmB,EAExBN,KAAac,EAFW,EAEXA,QAGrB,OACE,qCACE,oBAAI7B,UAAU,kFAAd,SAAiGQ,IAE/FqB,GAAW,mBAAG7B,UAAU,mCAAb,wBAEb,qBAAKA,UAAU,4BAAf,SACGqB,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEEjBiB,MAjBf,WAAyB,IAAD,EACc7C,mBAAS,CAAC,YADxB,mBACfQ,EADe,KACHT,EADG,KAItB,OACE,sBAAKU,UAAU,SAAf,UACE,qBAAIA,UAAU,kEAAd,sBACW,0CAEX,cAACX,EAAD,CAAaC,cAAeA,IACzBS,EAAWkB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAASA,SAAUA,GAAeA,U,MCT5C6B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.cb75181f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function AddCategory({ setCategories }) {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 1) {\r\n      setCategories((categories) => [inputValue,...categories ]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"w-full max-w-full\">\r\n      <input\r\n        type=\"text\"\r\n        aria-label=\"Buscar gif\"\r\n        placeholder=\"Search all the GIFs\"\r\n        className=\"border \r\n        w-full  ring outline-none  ring-gray-300 focus:ring focus:ring-purple-500 p-2 mt-5 mb-2\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=30&api_key=fzId3VBuREjibqafqpDWOufrEfE0rw3r`;\r\n\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n    return gifs\r\n  };","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <article className=\"card flex-col flex-grow relative max-w-max animate__animated  animate__fadeInUp animate__faster\">\r\n      <picture>\r\n        <img\r\n          src={url}\r\n          alt={title}\r\n          title={title}\r\n          height=\"200\"\r\n          width=\"300\"\r\n          className=\"object-cover h-full w-full\"\r\n        />\r\n      </picture>\r\n      <p className=\"flex  absolute bottom-0 text-white left-0 p-3 h-36\">\r\n        <span className=\"self-end\">{title}</span>\r\n      </p>\r\n    </article>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n  const { data:images, loading} = useFetchGifs(category);\r\n \r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"font-medium text-3xl animate__animated  animate__fadeInUp animate__faster mt-10\">{category}</h3> \r\n      {\r\n        loading && <p className=\"animate__animated animate__flash\">Loading...</p> \r\n      }\r\n      <div className=\"flex flex-wrap gap-2 my-5\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n        setState({\r\n          data: imgs,\r\n          loading: false,\r\n        });\r\n    });\r\n  }, [category]); \r\n\r\n\r\n  return state; // {data:[], loading: true}\r\n};\r\n","import {  useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory.js\";\r\nimport GifGrid from \"./components/GifGrid.js\";\r\n\r\nfunction GifExpertApp() {\r\n  const [categories, setCategories] = useState([\"Friends\"]);\r\n \r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <h1 className=\"title font-bold text-2xl md:text-3xl font-sans leading-relaxed \">\r\n        GifExpert<span>App</span>\r\n      </h1> \r\n      <AddCategory setCategories={setCategories} />\r\n        {categories.map((category) => (\r\n          <GifGrid category={category} key={category} />\r\n        ))} \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css'; \n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <GifExpertApp/>,\n  //  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log)\n"],"sourceRoot":""}